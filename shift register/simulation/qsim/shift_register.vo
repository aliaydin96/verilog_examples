// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "04/27/2018 15:46:28"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module shift_register (
	seri_in,
	clk,
	clear,
	seri_out);
input 	seri_in;
input 	clk;
input 	clear;
output 	seri_out;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \seri_out~output_o ;
wire \clk~input_o ;
wire \seri_in~input_o ;
wire \clear~input_o ;
wire \comb_3|Q~q ;
wire \comb_4|Q~q ;
wire \comb_5|Q~q ;
wire \comb_6|Q~q ;


cyclonev_io_obuf \seri_out~output (
	.i(\comb_6|Q~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seri_out~output_o ),
	.obar());
// synopsys translate_off
defparam \seri_out~output .bus_hold = "false";
defparam \seri_out~output .open_drain_output = "false";
defparam \seri_out~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \seri_in~input (
	.i(seri_in),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\seri_in~input_o ));
// synopsys translate_off
defparam \seri_in~input .bus_hold = "false";
defparam \seri_in~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \clear~input (
	.i(clear),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clear~input_o ));
// synopsys translate_off
defparam \clear~input .bus_hold = "false";
defparam \clear~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \comb_3|Q (
	.clk(\clk~input_o ),
	.d(\seri_in~input_o ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_3|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_3|Q .is_wysiwyg = "true";
defparam \comb_3|Q .power_up = "low";
// synopsys translate_on

dffeas \comb_4|Q (
	.clk(\clk~input_o ),
	.d(\comb_3|Q~q ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_4|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_4|Q .is_wysiwyg = "true";
defparam \comb_4|Q .power_up = "low";
// synopsys translate_on

dffeas \comb_5|Q (
	.clk(\clk~input_o ),
	.d(\comb_4|Q~q ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_5|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_5|Q .is_wysiwyg = "true";
defparam \comb_5|Q .power_up = "low";
// synopsys translate_on

dffeas \comb_6|Q (
	.clk(\clk~input_o ),
	.d(\comb_5|Q~q ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\comb_6|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \comb_6|Q .is_wysiwyg = "true";
defparam \comb_6|Q .power_up = "low";
// synopsys translate_on

assign seri_out = \seri_out~output_o ;

endmodule
